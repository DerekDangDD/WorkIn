{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\I520498\\\\Desktop\\\\saphackathon\\\\deckofcards\\\\src\\\\components\\\\Home.js\";\nimport React from 'react';\nimport Navigation from './Navigation';\nimport './style.css';\nvar images = [];\n\nfor (var i = 0; i < 20; i++) {\n  var pagePath = './pages/p' + i.toString() + '.jpg';\n  var thumbnailPath = './thumbnails/p' + i.toString() + '.jpg';\n  images.push({\n    original: pagePath,\n    thumbnail: thumbnailPath\n  });\n}\n\nvar deck_id = \"io7hsi37ypwv\";\nvar current_image = \"https://opengameart.org/sites/default/files/card%20back%20red.png\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.httpGet = theUrl => {\n      var xmlHttp = new XMLHttpRequest();\n      xmlHttp.open(\"GET\", theUrl, false); // false for synchronous request\n\n      xmlHttp.send(null);\n      return xmlHttp.responseText;\n    };\n\n    this.makeDeck = () => {\n      var deck = JSON.parse(this.httpGet(\"https://deckofcardsapi.com/api/deck/new/shuffle/?deck_count=1\"));\n      deck_id = deck['deck_id'];\n      console.log(\"created new deck: \" + deck_id);\n    };\n\n    this.drawCard = () => {\n      var url = \"https://deckofcardsapi.com/api/deck/\" + deck_id + \"/draw/?count=1\";\n      var card = JSON.parse(this.httpGet(url));\n      console.log(\"drawing card\");\n      current_image = card['cards'][0]['image'];\n      var img = document.getElementById(\"card\");\n      img.src = \"https://opengameart.org/sites/default/files/card%20back%20red.png\";\n      var no_card = document.getElementById(\"number_of_cards\");\n      no_card.innerHTML = \"Remaining cards: \" + card['remaining'];\n    };\n\n    this.newGame = () => {\n      this.makeDeck();\n      var no_card = document.getElementById(\"number_of_cards\");\n      no_card.innerHTML = \"Remaining cards: \" + 52;\n      var img = document.getElementById(\"card\");\n      img.src = \"https://opengameart.org/sites/default/files/card%20back%20red.png\";\n    };\n\n    this.flipCard = () => {\n      var img = document.getElementById(\"card\");\n      img.src = current_image;\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Navigation, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"app\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      id: \"main\",\n      style: {\n        color: 'green'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      id: \"number_of_cards\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }\n    }, \"\\\"Remaining cards: 52\\\"\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      id: \"card\",\n      src: \"https://deckofcardsapi.com/static/img/XX.png\",\n      width: 300,\n      height: 400,\n      alt: \"card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.newGame,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }\n    }, \"New Game/Reshuffle\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.drawCard,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }\n    }, \"Draw card\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.flipCard,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }\n    }, \"Flip card\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"iframe\", {\n      width: 420,\n      height: 345,\n      src: \"https://www.youtube.com/embed/tgbNymZ7vqY\",\n      title: \"video\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/I520498/Desktop/saphackathon/deckofcards/src/components/Home.js"],"names":["React","Navigation","images","i","pagePath","toString","thumbnailPath","push","original","thumbnail","deck_id","current_image","App","Component","httpGet","theUrl","xmlHttp","XMLHttpRequest","open","send","responseText","makeDeck","deck","JSON","parse","console","log","drawCard","url","card","img","document","getElementById","src","no_card","innerHTML","newGame","flipCard","render","color"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Navigation from './Navigation';\r\nimport './style.css';\r\n\r\nvar images = [];\r\n\r\nfor (var i = 0; i < 20; i++) {\r\n    var pagePath = './pages/p' + i.toString() + '.jpg';\r\n    var thumbnailPath = './thumbnails/p' + i.toString() + '.jpg';\r\n\r\n    images.push({ original: pagePath, thumbnail: thumbnailPath });\r\n}\r\n\r\nvar deck_id = \"io7hsi37ypwv\"\r\nvar current_image = \"https://opengameart.org/sites/default/files/card%20back%20red.png\"\r\n\r\nclass App extends React.Component {\r\n\r\n    httpGet = (theUrl) => {\r\n        var xmlHttp = new XMLHttpRequest();\r\n        xmlHttp.open( \"GET\", theUrl, false ); // false for synchronous request\r\n        xmlHttp.send( null );\r\n        return xmlHttp.responseText;\r\n    }\r\n    \r\n    makeDeck = () => {\r\n        var deck = JSON.parse(this.httpGet(\"https://deckofcardsapi.com/api/deck/new/shuffle/?deck_count=1\"))\r\n        deck_id = deck['deck_id']\r\n        console.log(\"created new deck: \" + deck_id)\r\n    }\r\n    \r\n    drawCard = () => {\r\n        var url = \"https://deckofcardsapi.com/api/deck/\" + deck_id + \"/draw/?count=1\"\r\n        var card = JSON.parse(this.httpGet(url))\r\n        console.log(\"drawing card\")\r\n        current_image = card['cards'][0]['image']\r\n        var img = document.getElementById(\"card\")\r\n        img.src = \"https://opengameart.org/sites/default/files/card%20back%20red.png\";\r\n        var no_card = document.getElementById(\"number_of_cards\")\r\n        no_card.innerHTML = \"Remaining cards: \" + card['remaining']    \r\n    }\r\n    \r\n    newGame = () => {\r\n        this.makeDeck()\r\n        var no_card = document.getElementById(\"number_of_cards\")\r\n        no_card.innerHTML = \"Remaining cards: \" + 52  \r\n        var img = document.getElementById(\"card\")\r\n        img.src = \"https://opengameart.org/sites/default/files/card%20back%20red.png\";\r\n    }\r\n    \r\n    flipCard = () => {\r\n        var img = document.getElementById(\"card\")\r\n        img.src = current_image\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navigation />\r\n                <div className=\"app\">\r\n                    <p id=\"main\" style={{color: 'green'}}>\r\n                    <span id=\"number_of_cards\">\"Remaining cards: 52\"</span>\r\n                    </p><div>\r\n                    <img id=\"card\" src=\"https://deckofcardsapi.com/static/img/XX.png\" width={300} height={400} alt=\"card\" />\r\n                    </div>\r\n                    <p />\r\n                    <button onClick={this.newGame}>New Game/Reshuffle</button> \r\n                    <button onClick={this.drawCard}>Draw card</button> \r\n                    <button onClick={this.flipCard}>Flip card</button>    \r\n                    <div>\r\n                    <iframe width={420} height={345} src=\"https://www.youtube.com/embed/tgbNymZ7vqY\" title=\"video\">\r\n                    </iframe>\r\n                </div>\r\n              </div>\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}